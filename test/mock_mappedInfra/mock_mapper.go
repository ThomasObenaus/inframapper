// Code generated by MockGen. DO NOT EDIT.
// Source: mappedInfra/mapper.go

// Package mock_mappedInfra is a generated GoMock package.
package mock_mappedInfra

import (
	gomock "github.com/golang/mock/gomock"
	aws "github.com/thomasobenaus/inframapper/aws"
	mappedInfra "github.com/thomasobenaus/inframapper/mappedInfra"
	terraform "github.com/thomasobenaus/inframapper/terraform"
	reflect "reflect"
)

// MockMapper is a mock of Mapper interface
type MockMapper struct {
	ctrl     *gomock.Controller
	recorder *MockMapperMockRecorder
}

// MockMapperMockRecorder is the mock recorder for MockMapper
type MockMapperMockRecorder struct {
	mock *MockMapper
}

// NewMockMapper creates a new mock instance
func NewMockMapper(ctrl *gomock.Controller) *MockMapper {
	mock := &MockMapper{ctrl: ctrl}
	mock.recorder = &MockMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMapper) EXPECT() *MockMapperMockRecorder {
	return m.recorder
}

// Map mocks base method
func (m *MockMapper) Map(aws aws.Infra, tf terraform.Infra) (mappedInfra.Infra, error) {
	ret := m.ctrl.Call(m, "Map", aws, tf)
	ret0, _ := ret[0].(mappedInfra.Infra)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Map indicates an expected call of Map
func (mr *MockMapperMockRecorder) Map(aws, tf interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Map", reflect.TypeOf((*MockMapper)(nil).Map), aws, tf)
}

// String mocks base method
func (m *MockMapper) String() string {
	ret := m.ctrl.Call(m, "String")
	ret0, _ := ret[0].(string)
	return ret0
}

// String indicates an expected call of String
func (mr *MockMapperMockRecorder) String() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "String", reflect.TypeOf((*MockMapper)(nil).String))
}
