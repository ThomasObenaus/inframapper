// Code generated by MockGen. DO NOT EDIT.
// Source: mappedInfra/infra.go

// Package mock_mappedInfra is a generated GoMock package.
package mock_mappedInfra

import (
	gomock "github.com/golang/mock/gomock"
	mappedInfra "github.com/thomas.obenaus/inframapper/mappedInfra"
	reflect "reflect"
)

// MockInfra is a mock of Infra interface
type MockInfra struct {
	ctrl     *gomock.Controller
	recorder *MockInfraMockRecorder
}

// MockInfraMockRecorder is the mock recorder for MockInfra
type MockInfraMockRecorder struct {
	mock *MockInfra
}

// NewMockInfra creates a new mock instance
func NewMockInfra(ctrl *gomock.Controller) *MockInfra {
	mock := &MockInfra{ctrl: ctrl}
	mock.recorder = &MockInfraMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInfra) EXPECT() *MockInfraMockRecorder {
	return m.recorder
}

// NumResources mocks base method
func (m *MockInfra) NumResources() int {
	ret := m.ctrl.Call(m, "NumResources")
	ret0, _ := ret[0].(int)
	return ret0
}

// NumResources indicates an expected call of NumResources
func (mr *MockInfraMockRecorder) NumResources() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NumResources", reflect.TypeOf((*MockInfra)(nil).NumResources))
}

// Resources mocks base method
func (m *MockInfra) Resources() []mappedInfra.MappedResource {
	ret := m.ctrl.Call(m, "Resources")
	ret0, _ := ret[0].([]mappedInfra.MappedResource)
	return ret0
}

// Resources indicates an expected call of Resources
func (mr *MockInfraMockRecorder) Resources() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Resources", reflect.TypeOf((*MockInfra)(nil).Resources))
}

// ResourceById mocks base method
func (m *MockInfra) ResourceById(id string) mappedInfra.MappedResource {
	ret := m.ctrl.Call(m, "ResourceById", id)
	ret0, _ := ret[0].(mappedInfra.MappedResource)
	return ret0
}

// ResourceById indicates an expected call of ResourceById
func (mr *MockInfraMockRecorder) ResourceById(id interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResourceById", reflect.TypeOf((*MockInfra)(nil).ResourceById), id)
}
